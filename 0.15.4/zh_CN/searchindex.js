Search.setIndex({"alltitles": {"Acquisition": [[0, null], [0, "id1"]], "CrackNuts API \u6587\u6863": [[2, null]], "Cracker": [[1, null]]}, "docnames": ["acquisition", "cracker", "index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["acquisition.rst", "cracker.rst", "index.rst"], "indexentries": {"__init__() \uff08cracknuts.cracker.cracker_basic.configbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.ConfigBasic.__init__", false]], "__init__() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.__init__", false]], "__init__() \uff08cracknuts.cracker.cracker_s1.configs1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.ConfigS1.__init__", false]], "configbasic\uff08cracknuts.cracker.cracker_basic \u4e2d\u7684\u7c7b\uff09": [[1, "cracknuts.cracker.cracker_basic.ConfigBasic", false]], "configs1\uff08cracknuts.cracker.cracker_s1 \u4e2d\u7684\u7c7b\uff09": [[1, "cracknuts.cracker.cracker_s1.ConfigS1", false]], "connect() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.connect", false]], "crackerbasic\uff08cracknuts.cracker.cracker_basic \u4e2d\u7684\u7c7b\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic", false]], "crackers1\uff08cracknuts.cracker.cracker_s1 \u4e2d\u7684\u7c7b\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1", false]], "disconnect() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.disconnect", false]], "dump_config() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.dump_config", false]], "dump_to_json() \uff08cracknuts.cracker.cracker_basic.configbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.ConfigBasic.dump_to_json", false]], "get_address() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.get_address", false]], "get_bitstream_version() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.get_bitstream_version", false]], "get_connection_status() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.get_connection_status", false]], "get_current_config() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.get_current_config", false]], "get_default_config() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.get_default_config", false]], "get_default_config() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.get_default_config", false]], "get_firmware_info() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.get_firmware_info", false]], "get_firmware_version() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.get_firmware_version", false]], "get_hardware_model() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.get_hardware_model", false]], "get_id() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.get_id", false]], "get_operator() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.get_operator", false]], "get_uri() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.get_uri", false]], "i2c_config() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.i2c_config", false]], "i2c_disable() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.i2c_disable", false]], "i2c_enable() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.i2c_enable", false]], "i2c_receive() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.i2c_receive", false]], "i2c_reset() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.i2c_reset", false]], "i2c_transceive() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.i2c_transceive", false]], "i2c_transmit() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.i2c_transmit", false]], "i2c_transmit_delay_receive() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.i2c_transmit_delay_receive", false]], "load_config_from_file() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.load_config_from_file", false]], "load_config_from_str() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.load_config_from_str", false]], "load_from_json() \uff08cracknuts.cracker.cracker_basic.configbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.ConfigBasic.load_from_json", false]], "non_protocol_error\uff08cracknuts.cracker.cracker_basic.crackerbasic \u5c5e\u6027\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.NON_PROTOCOL_ERROR", false]], "nut_clock_disable() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.nut_clock_disable", false]], "nut_clock_enable() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.nut_clock_enable", false]], "nut_clock_freq() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.nut_clock_freq", false]], "nut_timeout_ms() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.nut_timeout_ms", false]], "nut_voltage() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.nut_voltage", false]], "nut_voltage_disable() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.nut_voltage_disable", false]], "nut_voltage_enable() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.nut_voltage_enable", false]], "osc_analog_disable() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.osc_analog_disable", false]], "osc_analog_enable() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.osc_analog_enable", false]], "osc_analog_gain() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.osc_analog_gain", false]], "osc_force() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.osc_force", false]], "osc_get_analog_wave() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.osc_get_analog_wave", false]], "osc_get_digital_wave() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.osc_get_digital_wave", false]], "osc_is_triggered() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.osc_is_triggered", false]], "osc_sample_clock() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.osc_sample_clock", false]], "osc_sample_clock_phase() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.osc_sample_clock_phase", false]], "osc_sample_delay() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.osc_sample_delay", false]], "osc_sample_length() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.osc_sample_length", false]], "osc_single() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.osc_single", false]], "osc_trigger_edge() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.osc_trigger_edge", false]], "osc_trigger_level() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.osc_trigger_level", false]], "osc_trigger_mode() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.osc_trigger_mode", false]], "osc_trigger_source() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.osc_trigger_source", false]], "reconnect() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.reconnect", false]], "register_read() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.register_read", false]], "register_write() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.register_write", false]], "send_and_receive() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.send_and_receive", false]], "send_with_command() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.send_with_command", false]], "set_address() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.set_address", false]], "set_ip_port() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.set_ip_port", false]], "set_logger_debug_payload_max_length() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.set_logger_debug_payload_max_length", false]], "set_logger_info_payload_max_length() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.set_logger_info_payload_max_length", false]], "set_logging_level() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.set_logging_level", false]], "set_uri() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.set_uri", false]], "spi_config() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.spi_config", false]], "spi_disable() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.spi_disable", false]], "spi_enable() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.spi_enable", false]], "spi_receive() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.spi_receive", false]], "spi_reset() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.spi_reset", false]], "spi_transceive() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.spi_transceive", false]], "spi_transmit() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.spi_transmit", false]], "spi_transmit_delay_receive() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.spi_transmit_delay_receive", false]], "sync_config_to_cracker() \uff08cracknuts.cracker.cracker_basic.crackerbasic \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_basic.CrackerBasic.sync_config_to_cracker", false]], "sync_config_to_cracker() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.sync_config_to_cracker", false]], "uart_config() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.uart_config", false]], "uart_disable() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.uart_disable", false]], "uart_enable() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.uart_enable", false]], "uart_receive_fifo_clear() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.uart_receive_fifo_clear", false]], "uart_receive_fifo_dump() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.uart_receive_fifo_dump", false]], "uart_receive_fifo_remained() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.uart_receive_fifo_remained", false]], "uart_reset() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.uart_reset", false]], "uart_transmit_receive() \uff08cracknuts.cracker.cracker_s1.crackers1 \u65b9\u6cd5\uff09": [[1, "cracknuts.cracker.cracker_s1.CrackerS1.uart_transmit_receive", false]]}, "objects": {"cracknuts.cracker.cracker_basic": [[1, 0, 1, "", "ConfigBasic"], [1, 0, 1, "", "CrackerBasic"]], "cracknuts.cracker.cracker_basic.ConfigBasic": [[1, 1, 1, "", "__init__"], [1, 1, 1, "", "dump_to_json"], [1, 1, 1, "", "load_from_json"]], "cracknuts.cracker.cracker_basic.CrackerBasic": [[1, 2, 1, "", "NON_PROTOCOL_ERROR"], [1, 1, 1, "", "__init__"], [1, 1, 1, "", "connect"], [1, 1, 1, "", "disconnect"], [1, 1, 1, "", "dump_config"], [1, 1, 1, "", "get_address"], [1, 1, 1, "", "get_bitstream_version"], [1, 1, 1, "", "get_connection_status"], [1, 1, 1, "", "get_current_config"], [1, 1, 1, "", "get_default_config"], [1, 1, 1, "", "get_firmware_info"], [1, 1, 1, "", "get_firmware_version"], [1, 1, 1, "", "get_hardware_model"], [1, 1, 1, "", "get_id"], [1, 1, 1, "", "get_operator"], [1, 1, 1, "", "get_uri"], [1, 1, 1, "", "load_config_from_file"], [1, 1, 1, "", "load_config_from_str"], [1, 1, 1, "", "osc_force"], [1, 1, 1, "", "osc_get_analog_wave"], [1, 1, 1, "", "osc_get_digital_wave"], [1, 1, 1, "", "osc_is_triggered"], [1, 1, 1, "", "osc_single"], [1, 1, 1, "", "reconnect"], [1, 1, 1, "", "send_and_receive"], [1, 1, 1, "", "send_with_command"], [1, 1, 1, "", "set_address"], [1, 1, 1, "", "set_ip_port"], [1, 1, 1, "", "set_logger_debug_payload_max_length"], [1, 1, 1, "", "set_logger_info_payload_max_length"], [1, 1, 1, "", "set_logging_level"], [1, 1, 1, "", "set_uri"], [1, 1, 1, "", "sync_config_to_cracker"]], "cracknuts.cracker.cracker_s1": [[1, 0, 1, "", "ConfigS1"], [1, 0, 1, "", "CrackerS1"]], "cracknuts.cracker.cracker_s1.ConfigS1": [[1, 1, 1, "", "__init__"]], "cracknuts.cracker.cracker_s1.CrackerS1": [[1, 1, 1, "", "get_default_config"], [1, 1, 1, "", "i2c_config"], [1, 1, 1, "", "i2c_disable"], [1, 1, 1, "", "i2c_enable"], [1, 1, 1, "", "i2c_receive"], [1, 1, 1, "", "i2c_reset"], [1, 1, 1, "", "i2c_transceive"], [1, 1, 1, "", "i2c_transmit"], [1, 1, 1, "", "i2c_transmit_delay_receive"], [1, 1, 1, "", "nut_clock_disable"], [1, 1, 1, "", "nut_clock_enable"], [1, 1, 1, "", "nut_clock_freq"], [1, 1, 1, "", "nut_timeout_ms"], [1, 1, 1, "", "nut_voltage"], [1, 1, 1, "", "nut_voltage_disable"], [1, 1, 1, "", "nut_voltage_enable"], [1, 1, 1, "", "osc_analog_disable"], [1, 1, 1, "", "osc_analog_enable"], [1, 1, 1, "", "osc_analog_gain"], [1, 1, 1, "", "osc_sample_clock"], [1, 1, 1, "", "osc_sample_clock_phase"], [1, 1, 1, "", "osc_sample_delay"], [1, 1, 1, "", "osc_sample_length"], [1, 1, 1, "", "osc_trigger_edge"], [1, 1, 1, "", "osc_trigger_level"], [1, 1, 1, "", "osc_trigger_mode"], [1, 1, 1, "", "osc_trigger_source"], [1, 1, 1, "", "register_read"], [1, 1, 1, "", "register_write"], [1, 1, 1, "", "spi_config"], [1, 1, 1, "", "spi_disable"], [1, 1, 1, "", "spi_enable"], [1, 1, 1, "", "spi_receive"], [1, 1, 1, "", "spi_reset"], [1, 1, 1, "", "spi_transceive"], [1, 1, 1, "", "spi_transmit"], [1, 1, 1, "", "spi_transmit_delay_receive"], [1, 1, 1, "", "sync_config_to_cracker"], [1, 1, 1, "", "uart_config"], [1, 1, 1, "", "uart_disable"], [1, 1, 1, "", "uart_enable"], [1, 1, 1, "", "uart_receive_fifo_clear"], [1, 1, 1, "", "uart_receive_fifo_dump"], [1, 1, 1, "", "uart_receive_fifo_remained"], [1, 1, 1, "", "uart_reset"], [1, 1, 1, "", "uart_transmit_receive"]]}, "objnames": {"0": ["py", "class", "Python \u7c7b"], "1": ["py", "method", "Python \u65b9\u6cd5"], "2": ["py", "attribute", "Python \u5c5e\u6027"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:attribute"}, "terms": {"05": 0, "10": 1, "1000": 0, "10000": 1, "1024": [0, 1], "12000": 1, "12m": 1, "1k": 1, "2097152": 1, "24000": 1, "24m": 1, "2m": 1, "4000": 1, "48000": 1, "48m": 1, "4m": 1, "65000": 1, "65m": 1, "8000": 1, "8m": 1, "__init__": [0, 1], "abc": [0, 1], "abstract": [0, 1], "acquisit": 2, "address": 1, "all": 1, "an": [1, 2], "analog": 1, "analysi": 2, "and": [1, 2], "applic": 2, "as": 1, "auto": 0, "base": 1, "base_address": 1, "baudrat": 1, "baudrate_115200": 1, "be": 1, "bin_bitstream": 1, "bin_bitstream_path": 1, "bin_serv": 1, "bin_server_path": 1, "bool": 1, "builder": 0, "byte": 1, "bytes": 1, "callback": 0, "can": 1, "caught": 1, "cha": 1, "channel": [1, 2], "chb": 1, "class": [0, 1], "clear": 1, "clock": 1, "cnp": 1, "code": 1, "collabor": 2, "combin": 2, "command": 1, "commonconfig": 1, "config": [0, 1], "config_crack": 0, "config_scrat": 0, "configbas": [1, 2], "configs1": [1, 2], "connect": [0, 1], "connect_crack": 0, "connect_net": 0, "connect_scrat": 0, "count": [0, 1], "cpha": 1, "cpol": 1, "cracker": [0, 2], "cracker_bas": 1, "cracker_s1": 1, "crackerbas": [1, 2], "crackers1": [1, 2], "cracknut": [0, 1], "data": 1, "data_length": 0, "debug": 1, "delay": 1, "dev_addr": 1, "develop": 2, "devic": [0, 1], "dict": 0, "disabl": 1, "disconnect": 1, "do": 0, "do_error_handler_strategi": 0, "do_error_handler_strategy_continue_until_max_error_count": 0, "do_error_handler_strategy_exit": 0, "do_error_max_count": 0, "down": 1, "dump_config": [0, 1], "dump_to_json": 1, "eas": 2, "edg": 1, "edge_level": 1, "effici": 2, "eightbit": 1, "either": 1, "enabl": 1, "end": 1, "enhanc": 2, "environ": 2, "equip": 1, "error": 1, "exampl": 1, "except": 1, "experi": 2, "fals": 1, "fifo": 1, "file_format": 0, "file_path": 0, "float": [0, 1], "for": [1, 2], "forc": 1, "force_update_bin": 1, "from": [0, 1], "gain": 1, "generic": 1, "get": 1, "get_address": 1, "get_bitstream_vers": 1, "get_connection_status": 1, "get_current_config": 1, "get_default_config": 1, "get_firmware_info": 1, "get_firmware_vers": 1, "get_hardware_model": 1, "get_id": 1, "get_last_wav": 0, "get_oper": 1, "get_status": 0, "get_uri": 1, "hardwar": [1, 2], "host": 2, "i2c": 1, "i2c_config": 1, "i2c_dis": 1, "i2c_en": 1, "i2c_rec": 1, "i2c_reset": 1, "i2c_transc": 1, "i2c_transmit": 1, "i2c_transmit_delay_rec": 1, "i2cspe": 1, "id": 1, "if": 1, "in": [1, 2], "index": 1, "info": 1, "init": 0, "input": 1, "instanc": 1, "int": [0, 1], "integr": 2, "intuit": 2, "ip": 1, "is": [1, 2], "is_run": 0, "is_trigg": 1, "it": 1, "jpupyt": 0, "json": [0, 1], "json_str": [0, 1], "jupyt": [0, 2], "khz": 1, "length": 1, "level": 1, "load": 0, "load_config_from_fil": [0, 1], "load_config_from_str": [0, 1], "load_from_json": 1, "log": 1, "mean": 1, "messag": 1, "millisecond": 1, "mode": 1, "mv": 1, "name": 1, "ndarray": [0, 1], "non_protocol_error": 1, "none": [0, 1], "np": 1, "number": 1, "numpi": 0, "nut": 1, "nut_clock_dis": 1, "nut_clock_en": 1, "nut_clock_freq": 1, "nut_timeout_m": 1, "nut_voltag": 1, "nut_voltage_dis": 1, "nut_voltage_en": 1, "object": 1, "of": [1, 2], "offset": 1, "on_run_progress_chang": 0, "on_status_chang": 0, "on_wave_load": 0, "one": 1, "oper": 1, "operator_port": 1, "optim": 2, "or": 1, "osc": 1, "osc_analog_dis": 1, "osc_analog_en": 1, "osc_analog_gain": 1, "osc_forc": 1, "osc_get_analog_wav": 1, "osc_get_digital_wav": 1, "osc_is_trigg": 1, "osc_sample_clock": 1, "osc_sample_clock_phas": 1, "osc_sample_delay": 1, "osc_sample_length": 1, "osc_singl": 1, "osc_trigger_edg": 1, "osc_trigger_level": 1, "osc_trigger_mod": 1, "osc_trigger_sourc": 1, "pariti": 1, "parity_non": 1, "path": [0, 1], "pattern": 1, "paus": 0, "payload": 1, "phase": 1, "polar": 1, "port": 1, "pre_do": 0, "pre_init": 0, "produc": 1, "protocol": 1, "provid": 2, "python": 2, "rais": 1, "rate": 1, "read": 1, "receiv": 1, "reconnect": 1, "regist": 1, "register_read": 1, "register_writ": 1, "remain": 1, "repres": 1, "reset": 1, "respect": 1, "respons": 1, "resum": 0, "return": [0, 1], "rfu": 1, "run": 0, "run_sync": 0, "rx_count": 1, "sampl": 1, "sample_count": 1, "sample_length": 0, "sample_offset": 0, "scarr": 0, "scrat": 0, "send_and_rec": 1, "send_with_command": 1, "serial": 1, "set": 1, "set_address": 1, "set_crack": 0, "set_ip_port": 1, "set_logger_debug_payload_max_length": 1, "set_logger_info_payload_max_length": 1, "set_logging_level": 1, "set_uri": 1, "side": 2, "softwar": 2, "solut": 2, "sourc": 1, "specifi": 1, "speed": 1, "spi": 1, "spi_config": 1, "spi_cpha_low": 1, "spi_cpol_low": 1, "spi_dis": 1, "spi_en": 1, "spi_rec": 1, "spi_reset": 1, "spi_transc": 1, "spi_transmit": 1, "spi_transmit_delay_rec": 1, "spicpha": 1, "spicpol": 1, "standard_100k": 1, "static": 0, "status": [0, 1], "status_run": 0, "status_stop": 0, "status_test": 0, "stop": 0, "stopbit": 1, "stopbits_on": 1, "str": [0, 1], "string": [0, 1], "sync_config_to_crack": 1, "test": 0, "test_sync": 0, "that": 2, "the": [0, 1, 2], "this": 1, "through": 1, "timeout": 1, "to": [0, 1, 2], "trace_count": 0, "transfer": 0, "transmit": 1, "treat": 1, "trigger": 1, "trigger_judge_timeout": 0, "trigger_judge_wait_tim": 0, "true": 1, "tupl": 1, "tx_data": 1, "uart": 1, "uart_config": 1, "uart_dis": 1, "uart_en": 1, "uart_receive_fifo_clear": 1, "uart_receive_fifo_dump": 1, "uart_receive_fifo_remain": 1, "uart_reset": 1, "uart_transmit_rec": 1, "unit": 1, "unread": 1, "up": 1, "update_bin": 1, "uri": 1, "use": [1, 2], "user": 2, "valu": 1, "version": 1, "voltag": 1, "warn": 1, "wave": 1, "will": 1, "with": 1, "work": 2, "write": 1, "you": 1}, "titles": ["Acquisition", "Cracker", "CrackNuts API \u6587\u6863"], "titleterms": {"acquisit": 0, "api": 2, "cracker": 1, "cracknut": 2}})